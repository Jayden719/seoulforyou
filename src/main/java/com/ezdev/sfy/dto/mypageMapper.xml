<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="com.ezdev.sfy.dto.mypageMapper">

<select id="getMyPage" resultType="mypageDTO">
	select * from mypage where mem_no = #{no}
</select>

<select id="listFriend" parameterType="java.util.Map" resultType="memberDTO">
	select * from member where
		<foreach collection="friends" item="fr" separator="or">
				member_no = #{fr,jdbcType=VARCHAR}
		</foreach>
</select>

<update id="insertFriendMe" parameterType="java.util.Map" >
	update mypage
		set mypage_friend =
			mypage_friend||#{friend_no}||CHR(044)
	where mem_no = #{no}
</update>

<update id="insertFriendYou" parameterType="java.util.Map" >
	update mypage
		set mypage_friend =
			mypage_friend||#{no}||CHR(044)
	where mem_no = #{friend_no}
</update>

<update id="deleteFriend" parameterType="java.util.Map">
	update mypage
		set mypage_friend =
		replace(mypage_friend, #{friend_no}||CHR(044), '')
	where mem_no = #{no}
</update>

<select id="listMypageMember" parameterType="java.util.Map" resultType="memberDTO">
 select * from (select rownum rn, A.* from 
			(select * from member order by member_no asc)A) 
				where rn between #{start} and #{end}
</select>
<select id="listMypageMemberCount" resultType="Integer">
 select count(*) from member
</select>
<select id="findMember" parameterType="java.util.Map" resultType="memberDTO">
		${sql}
	</select>
<!-- <sql id="search"> <include refid="search"/>
 <if test="msearchType!=null"> 
  <if test="msearchType == 'id'.toString()">where member_id like '%' || #{mkeyword} || '%'</if>
  <if test="msearchType == 'name'.toString()">where member_name like '%' || #{mkeyword} || '%'</if>
 </if>
</sql> -->

<update id="updateFavorite" parameterType="java.util.Map" >
update mypage
	set mypage_favorite_tour = mypage_favorite_tour||#{tour_no, jdbcType=NUMERIC}||','
	where mem_no = #{no, jdbcType=NUMERIC}
</update>

<update id="deleteFavorite" parameterType="java.util.Map">
update mypage
	set mypage_favorite_tour = #{tour}
	where mem_no = #{no, jdbcType=NUMERIC}
</update>

<update id="deleteRouteFavorite" parameterType="java.util.Map">
update mypage
	set mypage_favorite_route = #{route}
	where mem_no = #{no, jdbcType=NUMERIC}
</update>

<!-- review -->
<select id="listReview" parameterType="java.util.Map" resultType="reviewDTO">
select * from (select rownum rn, B.* from
              (select * from review where mem_no = #{no} order by review_no asc)B)
              where rn between #{start} and #{end}
</select>
<select id="listReviewCount" resultType="Integer">
 select count(*) from review where mem_no = #{no}
</select>

<!-- MyRoute -->
<select id="getCountRoute" resultType="int">
 select count(*) from route where mem_no=#{no}
</select>
<select id="getCountRouteFilter" resultType="int">
 select count(*) from route where mem_no = #{no} and route_hashtag=#{route_hashtag}
</select>
<select id="listMyroute" resultType="myRouteDTO" parameterType="java.util.Map">
 select * from (select rownum rn, A.* from 
	(select * from route where mem_no = #{no} order by route_no desc)A) 
		where rn between #{start} and #{end} 
</select>
<select id="filterMyroute" resultType="myRouteDTO" parameterType="java.util.Map">
 select * from (select rownum rn, A.* from 
	(select * from route where mem_no = #{no} and route_hashtag = #{route_hashtag, jdbcType=VARCHAR} order by route_no desc)A) 
		where rn between #{start, jdbcType=NUMERIC} and #{end, jdbcType=NUMERIC} 
</select>
</mapper>